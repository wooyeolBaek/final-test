# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on:
  push:
    branches:
    - main

name: Cloud Run
env:
  PROJECT_ID: heyi-front-test
  SERVICE: heyi-front
  REGION: asia-northeast3-a

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    #- id: 'auth'
    #  name: 'Authenticate to Google Cloud'
    #  uses: 'google-github-actions/auth@v1'
    #  with:
    #    workload_identity_provider: 'heyi-front/447593667713/asia-northeast3-a/global/workloadIdentityPools/my-pool/providers/my-provider' # 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
    #    service_account: 'heyi-front-service-account@heyi-front-test.iam.gserviceaccount.com' #'my-service-account@my-project.iam.gserviceaccount.com'

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build frontend --file frontend/Dockerfile --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }} \
          --platform "managed" \
          --quiet